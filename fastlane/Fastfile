# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://docs.fastlane.tools/actions
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "2.28.3"

default_platform :ios

platform :ios do
  before_all do |lane, options|
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
    unless options[:no_carthage]
      carthage(
        command: "bootstrap",
        platform: "ios",
        cache_builds: true
      )
    end
  end

  lane :register_a_device do
     register_devices(
       devices: {
         "Ben's iPhone X": "5f4559e05c42ab375a6da4b232d186c8dbbc6f1b"
       })
     refresh_profiles
   end

   # A helper lane for refreshing provisioning profiles.
   lane :refresh_profiles do
     match(
       type: "development",
       force: true,
       git_url: "git@github.com:DJBen/certificates.git"
     )
     match(
       type: "adhoc",
       force: true,
       git_url: "git@github.com:DJBen/certificates.git"
     )
   end

  desc "Runs all the tests"
  lane :test do
    scan
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :beta do
    increment_build_number
    match(
      type: "appstore",
      git_url: "git@github.com:DJBen/certificates.git"
    )
    gym(
      scheme: "Graviton",
      export_options: {
        signingStyle: "manual",
        provisioningProfiles: {
          "com.Square.sihao.Graviton" => "match AppStore com.Square.sihao.Graviton"
        }
      },
      export_xcargs: "-allowProvisioningUpdates"
    )
    testflight(
      skip_waiting_for_build_processing: true
    )

    # sh "your_script.sh"
    # You can also use other beta testing services here (run `fastlane actions`)
  end

  desc "Deploy a new version to the App Store"
  lane :release do
    match(type: "appstore")
    # snapshot
    gym(scheme: "Graviton") # Build your app - more options available
    deliver(force: true)
    # frameit
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://docs.fastlane.tools/actions

# fastlane reports which actions are used
# No personal data is recorded. Learn more at https://github.com/fastlane/enhancer
